name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.9'

    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: mise run test-all

    - name: Build release binaries
      run: mise run build-release

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        CURRENT_TAG=${GITHUB_REF#refs/tags/}

        # Generate changelog
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG_RELEASE.md
        else
          echo "## Initial Release" > CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md
          echo "First release of cronmetrics - a Go-based cron job metrics collector and Prometheus exporter." >> CHANGELOG_RELEASE.md
        fi

        echo "changelog_file=CHANGELOG_RELEASE.md" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        body_path: ${{ steps.changelog.outputs.changelog_file }}
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Docker Hub Description
      if: success()
      run: |
        echo "Release ${{ github.ref_name }} completed successfully!"
        echo "Binaries uploaded to GitHub Releases"
        echo "Available platforms:"
        ls -la dist/ | grep -E '\.(tar\.gz|zip)$' | awk '{print $9}'
